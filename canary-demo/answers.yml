# Deployment Information
pods_status:
  main_pods_running: 3
  canary_pods_running: 1

# Service Information
service_endpoints:
  main_service_cluster_ip: 10.110.70.130 
  canary_service_cluster_ip: 10.110.66.100

# Ingress Information
ingress_details:
  address: 192.168.49.2
  host: canary-demo.local

# Metrics
main_deployment_metrics:
  http_requests_total: 146.0
  process_cpu_seconds_total: 1.1
  process_resident_memory_bytes: 3.2100352e+07

canary_deployment_metrics:
  http_requests_total: 25.0
  process_cpu_seconds_total: 0.35000000000000003
  process_resident_memory_bytes: 1.7311779517e+09

# Traffic Distribution Test
traffic_test_results:
  total_requests_sent: 171
  main_responses_received: 146
  canary_responses_received: 25
  actual_canary_percentage: 14.6

# Prometheus Queries
prometheus_metrics:
  main_request_rate: 54
  canary_request_rate: 54

# Rollback Test
rollback_test:
  previous_revision: 1
  rollback_command_used: helm rollback canary-demo 1 -n canary-demo
  time_to_rollback_seconds: 1

# Error Budget Calculation (based on 99.9% SLO)
error_budget:
  monthly_error_budget_seconds: 2592.00
  remaining_error_budget_percentage: 100.00

# Additional Observations
observations:
  unexpected_behaviors: > #TODO: List any unexpected behaviors you observed
    Endpoint `/metrics` has a version tag of http_requests_total metric, example `http_requests_total{version="v1"} 161.0.`
    I can't fill `prometheus_metrics.main_request_rate` because the prometheus_http_requests_total metric in the Prometheus data source doesn't have a version tag.
    So, I set the result search to `rate(prometheus_http_requests_total[5m])`, where the result series equals 54.
    Maybe I made a mistake because I did not have enough experience with Prometheus.
  suggested_improvements: > #TODO: List any improvements you would suggest
    The task is pretty fine but I was confused a little with the version tag in Prometheus.

